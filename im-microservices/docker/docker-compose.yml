version: '3.8'

services:
  # NATS 消息总线
  nats:
    image: nats:2.9-alpine
    container_name: im-nats
    ports:
      - "4222:4222"      # NATS客户端端口
      - "8222:8222"      # NATS管理端口
    command: >
      -c /etc/nats/nats.conf
    volumes:
      - nats-data:/data
      - nats-logs:/var/log
      - ./nats-config:/etc/nats
    environment:
      - NATS_USER=nats
      - NATS_PASS=nats123
    networks:
      - im-network
    restart: unless-stopped

  # Redis 缓存服务
  redis:
    image: redis:7-alpine
    container_name: im-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --requirepass ""
    networks:
      - im-network
    restart: unless-stopped

  # MySQL 主库
  mysql-master:
    image: mysql:8.0
    container_name: im-mysql-master
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: im_system
      MYSQL_USER: im_user
      MYSQL_PASSWORD: im_password
    volumes:
      - mysql-master-data:/var/lib/mysql
      - ./sql:/docker-entrypoint-initdb.d
      - ./mysql-master.cnf:/etc/mysql/conf.d/mysql.cnf
    networks:
      - im-network
    restart: unless-stopped
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --server-id=1
      --log-bin=mysql-bin
      --binlog-format=ROW
      --sync-binlog=1
      --innodb-flush-log-at-trx-commit=1

  # MySQL 从库
  mysql-slave:
    image: mysql:8.0
    container_name: im-mysql-slave
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: im_system_copy
      MYSQL_USER: im_user
      MYSQL_PASSWORD: im_password
    volumes:
      - mysql-slave-data:/var/lib/mysql
      - ./mysql-slave.cnf:/etc/mysql/conf.d/mysql.cnf
    networks:
      - im-network
    restart: unless-stopped
    depends_on:
      - mysql-master
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --server-id=2
      --relay-log=relay-bin
      --log-slave-updates=1
      --read-only=1

  # MinIO 对象存储
  minio:
    image: minio/minio:latest
    container_name: im-minio
    ports:
      - "9000:9000"      # API端口
      - "9001:9001"      # 控制台端口
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_SERVER_URL: http://localhost:9000
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    networks:
      - im-network
    restart: unless-stopped

  # Redis Commander (Redis管理界面)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: im-redis-commander
    ports:
      - "8081:8081"
    environment:
      REDIS_HOSTS: local:redis:6379
    networks:
      - im-network
    restart: unless-stopped
    depends_on:
      - redis

  # phpMyAdmin (MySQL管理界面)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: im-phpmyadmin
    ports:
      - "8082:80"
    environment:
      PMA_HOST: mysql-master
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: 123456
      MYSQL_ROOT_PASSWORD: 123456
    networks:
      - im-network
    restart: unless-stopped
    depends_on:
      - mysql-master

volumes:
  nats-data:
    driver: local
  nats-logs:
    driver: local
  redis-data:
    driver: local
  mysql-master-data:
    driver: local
  mysql-slave-data:
    driver: local
  minio-data:
    driver: local

networks:
  im-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 